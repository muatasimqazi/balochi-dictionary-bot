{
  "_args": [
    [
      {
        "raw": "package-hash@^1.1.0",
        "scope": null,
        "escapedName": "package-hash",
        "name": "package-hash",
        "rawSpec": "^1.1.0",
        "spec": ">=1.1.0 <2.0.0",
        "type": "range"
      },
      "/Users/muatasimqazi/Documents/Software Development/Bots/balochibot/node_modules/ava"
    ]
  ],
  "_from": "package-hash@>=1.1.0 <2.0.0",
  "_id": "package-hash@1.2.0",
  "_inCache": true,
  "_location": "/package-hash",
  "_nodeVersion": "5.10.1",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/package-hash-1.2.0.tgz_1463403606290_0.8582867733202875"
  },
  "_npmUser": {
    "name": "novemberborn",
    "email": "mark@novemberborn.net"
  },
  "_npmVersion": "3.8.7",
  "_phantomChildren": {},
  "_requested": {
    "raw": "package-hash@^1.1.0",
    "scope": null,
    "escapedName": "package-hash",
    "name": "package-hash",
    "rawSpec": "^1.1.0",
    "spec": ">=1.1.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/ava"
  ],
  "_resolved": "https://registry.npmjs.org/package-hash/-/package-hash-1.2.0.tgz",
  "_shasum": "003e56cd57b736a6ed6114cc2b81542672770e44",
  "_shrinkwrap": null,
  "_spec": "package-hash@^1.1.0",
  "_where": "/Users/muatasimqazi/Documents/Software Development/Bots/balochibot/node_modules/ava",
  "author": {
    "name": "Mark Wubben",
    "url": "https://novemberborn.net/"
  },
  "babel": {
    "plugins": [
      "transform-object-assign",
      "transform-es2015-block-scoping",
      "transform-es2015-modules-commonjs",
      "transform-es2015-shorthand-properties",
      "transform-strict-mode"
    ]
  },
  "bugs": {
    "url": "https://github.com/novemberborn/package-hash/issues"
  },
  "dependencies": {
    "md5-hex": "^1.3.0"
  },
  "description": "Generates a hash for an installed npm package, useful for salting caches",
  "devDependencies": {
    "@novemberborn/as-i-preach": "^2.0.1",
    "ava": "^0.14.0",
    "babel-cli": "^6.7.5",
    "babel-plugin-transform-es2015-block-scoping": "^6.7.1",
    "babel-plugin-transform-es2015-modules-commonjs": "^6.7.4",
    "babel-plugin-transform-es2015-shorthand-properties": "^6.5.0",
    "babel-plugin-transform-object-assign": "^6.5.0",
    "babel-plugin-transform-strict-mode": "^6.6.5",
    "nyc": "^6.4.0",
    "proxyquire": "^1.7.4",
    "rimraf": "^2.5.2",
    "tar": "^2.2.1"
  },
  "directories": {},
  "dist": {
    "shasum": "003e56cd57b736a6ed6114cc2b81542672770e44",
    "tarball": "https://registry.npmjs.org/package-hash/-/package-hash-1.2.0.tgz"
  },
  "files": [
    "index.js",
    "index.js.map"
  ],
  "gitHead": "2a14f0f767017f941aab62cd44c3c14689f6b843",
  "homepage": "https://github.com/novemberborn/package-hash#readme",
  "license": "ISC",
  "main": "index.js",
  "maintainers": [
    {
      "name": "novemberborn",
      "email": "mark@novemberborn.net"
    }
  ],
  "name": "package-hash",
  "nyc": {
    "cache": true,
    "exclude": [
      "scripts",
      "test"
    ],
    "reporter": [
      "html",
      "lcov",
      "text"
    ]
  },
  "optionalDependencies": {},
  "readme": "# package-hash\n\nGenerates a hash for an installed npm package, useful for salting caches.\n[AVA](https://github.com/sindresorhus/ava) for example caches precompiled test\nfiles. It generates a salt for its cache based on the various packages that are\nused when compiling the test files.\n\n`package-hash` can generate an appropriate hash based on the package location\n(on disk) and the `package.json` file. This hash is salted with a hash\nfor the `package-hash` itself.\n\n`package-hash` can detect when the package-to-be-hashed is a Git repository. In\nthe AVA example this is useful when you're debugging one of the packages used to\ncompile the test files. You can clone it locally and use `npm link` so AVA can\nfind the clone. The hash will include the HEAD (`.git/HEAD`) and its\ncorresponding ref (e.g. `.git/refs/heads/master`), any packed refs\n(`.git/packed-refs`), as well as the diff (`git diff`) for any non-committed\nchanges. This makes it really easy to test your changes without having to\nexplicitly clear the cache in the parent project.\n\n## Installation\n\n```console\n$ npm install --save package-hash\n```\n\n## Usage\n\n```js\nconst sync = require('package-hash').sync\n\nconst hash = sync(require.resolve('babel-core/package.json'))\n```\n\n`sync()` can be called with a directory or file path. File paths are translated\nto directories using\n[`path.dirname()`](https://nodejs.org/api/path.html#path_path_dirname_p). The\npath must exist. A `package.json` must exist within the directory.\n\nTo get the path to an npm package it's best to use\n`require.resolve('the-name/package.json')`, since `require.resolve('the-name')`\nmay resolve to a subdirectory of the package.\n\nYou can provide multiple paths:\n\n```js\nconst hash = sync([\n  require.resolve('babel-core/package.json'),\n  require.resolve('babel-preset-es2015/package.json')\n])\n```\n\nAn optional salt value can also be provided:\n\n```js\nconst hash = sync(require.resolve('babel-core/package.json'), 'salt value')\n```\n\nCurrently only a synchronous interface is available.\n\n## API\n\n### `sync(paths, salt?)`\n\n`paths: string | string[]` ➜ can be a single directory or file path, or an array of paths.\n\n`salt: Array | Buffer | Object | string` ➜ optional. If an `Array` or `Object` (not `null`) it is first converted to a JSON string.\n\n## Compatibility\n\n`package-hash` has been tested with Node 0.10 and above, including Windows\nsupport. Note that `git diff` support is not available in Node 0.10.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/novemberborn/package-hash.git"
  },
  "scripts": {
    "build": "babel src --out-dir ./ --source-maps",
    "clean": "rimraf index.js index.js.map",
    "coverage": "nyc npm test",
    "generate-fixture-index": "node scripts/generate-fixture-index.js",
    "lint": "as-i-preach",
    "posttest": "npm run lint",
    "prebuild": "npm run clean",
    "pregenerate-fixture-index": "npm run unpack-fixtures",
    "prepublish": "npm run build",
    "pretest": "npm run unpack-fixtures",
    "test": "ava",
    "unpack-fixtures": "node scripts/unpack-fixtures.js",
    "watch:build": "npm run build -- --watch",
    "watch:test": "npm run test -- --watch"
  },
  "version": "1.2.0"
}
