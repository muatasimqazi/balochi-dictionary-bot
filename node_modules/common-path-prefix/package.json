{
  "_args": [
    [
      {
        "raw": "common-path-prefix@^1.0.0",
        "scope": null,
        "escapedName": "common-path-prefix",
        "name": "common-path-prefix",
        "rawSpec": "^1.0.0",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "/Users/muatasimqazi/Documents/Software Development/Bots/balochibot/node_modules/ava"
    ]
  ],
  "_from": "common-path-prefix@>=1.0.0 <2.0.0",
  "_id": "common-path-prefix@1.0.0",
  "_inCache": true,
  "_location": "/common-path-prefix",
  "_nodeVersion": "5.4.0",
  "_npmUser": {
    "name": "novemberborn",
    "email": "mark@novemberborn.net"
  },
  "_npmVersion": "3.5.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "common-path-prefix@^1.0.0",
    "scope": null,
    "escapedName": "common-path-prefix",
    "name": "common-path-prefix",
    "rawSpec": "^1.0.0",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/ava"
  ],
  "_resolved": "https://registry.npmjs.org/common-path-prefix/-/common-path-prefix-1.0.0.tgz",
  "_shasum": "cd52f6f0712e0baab97d6f9732874f22f47752c0",
  "_shrinkwrap": null,
  "_spec": "common-path-prefix@^1.0.0",
  "_where": "/Users/muatasimqazi/Documents/Software Development/Bots/balochibot/node_modules/ava",
  "author": {
    "name": "Mark Wubben",
    "url": "https://novemberborn.net/"
  },
  "bugs": {
    "url": "https://github.com/novemberborn/common-path-prefix/issues"
  },
  "dependencies": {},
  "description": "Computes the longest prefix string that is common to each path, excluding the base component",
  "devDependencies": {
    "ava": "^0.9.1",
    "nyc": "^5.3.0",
    "standard": "^5.4.1"
  },
  "directories": {},
  "dist": {
    "shasum": "cd52f6f0712e0baab97d6f9732874f22f47752c0",
    "tarball": "https://registry.npmjs.org/common-path-prefix/-/common-path-prefix-1.0.0.tgz"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "164356169afc042f691178b2731bebbbfe85499d",
  "homepage": "https://github.com/novemberborn/common-path-prefix#readme",
  "license": "ISC",
  "main": "index.js",
  "maintainers": [
    {
      "name": "novemberborn",
      "email": "mark@novemberborn.net"
    }
  ],
  "name": "common-path-prefix",
  "optionalDependencies": {},
  "readme": "# common-path-prefix\n\nComputes the longest prefix string that is common to each path, excluding the\nbase component. Tested with Node 0.10 and above.\n\n## Installation\n\n```\nnpm install --save common-path-prefix\n```\n\n## Usage\n\nThe module has one default export, the `commonPathPrefix` function:\n\n```js\nvar commonPathPrefix = require('common-path-prefix')\n```\n\nCall `commonPathPrefix()` with an array of paths (strings) and an optional\nseparator character:\n\n```js\nvar paths = ['templates/main.handlebars', 'templates/_partial.handlebars']\n\ncommonPathPrefix(paths, '/') // returns 'templates/'\n```\n\nIf the separator is not provided the first `/` or `\\` found in the first path\nstring is used. This means the module works correctly no matter the platform:\n\n```js\ncommonPathPrefix(['templates/main.handlebars', 'templates/_partial.handlebars']) // returns 'templates/'\ncommonPathPrefix(['templates\\\\main.handlebars', 'templates\\\\_partial.handlebars']) // returns 'templates\\\\'\n```\n\nYou can provide any separator, for example:\n\n```js\ncommonPathPrefix(['foo$bar', 'foo$baz'], '$') // returns 'foo$''\n```\n\nAn empty string is returned if no common prefix exists:\n\n```js\ncommonPathPrefix(['foo/bar', 'baz/qux']) // returns ''\n```\n\nNote that the following *does* have a common prefix:\n\n```js\ncommonPathPrefix(['/foo/bar', '/baz/qux']) // returns '/'\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/novemberborn/common-path-prefix.git"
  },
  "scripts": {
    "coverage": "nyc npm test",
    "posttest": "standard",
    "test": "ava"
  },
  "version": "1.0.0"
}
