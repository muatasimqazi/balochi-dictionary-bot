{
  "_args": [
    [
      {
        "raw": "clean-yaml-object@^0.1.0",
        "scope": null,
        "escapedName": "clean-yaml-object",
        "name": "clean-yaml-object",
        "rawSpec": "^0.1.0",
        "spec": ">=0.1.0 <0.2.0",
        "type": "range"
      },
      "/Users/muatasimqazi/Documents/Software Development/Bots/balochibot/node_modules/ava"
    ]
  ],
  "_from": "clean-yaml-object@>=0.1.0 <0.2.0",
  "_id": "clean-yaml-object@0.1.0",
  "_inCache": true,
  "_location": "/clean-yaml-object",
  "_nodeVersion": "5.3.0",
  "_npmUser": {
    "name": "jamestalmage",
    "email": "james@talmage.io"
  },
  "_npmVersion": "3.5.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "clean-yaml-object@^0.1.0",
    "scope": null,
    "escapedName": "clean-yaml-object",
    "name": "clean-yaml-object",
    "rawSpec": "^0.1.0",
    "spec": ">=0.1.0 <0.2.0",
    "type": "range"
  },
  "_requiredBy": [
    "/ava"
  ],
  "_resolved": "https://registry.npmjs.org/clean-yaml-object/-/clean-yaml-object-0.1.0.tgz",
  "_shasum": "63fb110dc2ce1a84dc21f6d9334876d010ae8b68",
  "_shrinkwrap": null,
  "_spec": "clean-yaml-object@^0.1.0",
  "_where": "/Users/muatasimqazi/Documents/Software Development/Bots/balochibot/node_modules/ava",
  "author": {
    "name": "James Talmage",
    "email": "james@talmage.io",
    "url": "github.com/jamestalmage"
  },
  "bugs": {
    "url": "https://github.com/tapjs/clean-yaml-object/issues"
  },
  "dependencies": {},
  "description": "Clean up an object prior to serialization",
  "devDependencies": {
    "ava": "^0.10.0",
    "coveralls": "^2.11.6",
    "nyc": "^5.3.0",
    "xo": "^0.12.1"
  },
  "directories": {},
  "dist": {
    "shasum": "63fb110dc2ce1a84dc21f6d9334876d010ae8b68",
    "tarball": "https://registry.npmjs.org/clean-yaml-object/-/clean-yaml-object-0.1.0.tgz"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "37e3fd40076d7e6f92b9ca9a09a4cf600e6bac24",
  "homepage": "https://github.com/tapjs/clean-yaml-object#readme",
  "keywords": [
    "serialize",
    "clean",
    "dedupe",
    "circular",
    "yaml",
    "json",
    "error"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "jamestalmage",
      "email": "james@talmage.io"
    }
  ],
  "name": "clean-yaml-object",
  "optionalDependencies": {},
  "readme": "# clean-yaml-object [![Build Status](https://travis-ci.org/tapjs/clean-yaml-object.svg?branch=master)](https://travis-ci.org/tapjs/clean-yaml-object) [![Coverage Status](https://coveralls.io/repos/tapjs/clean-yaml-object/badge.svg?branch=master&service=github)](https://coveralls.io/github/tapjs/clean-yaml-object?branch=master)\n\n> Clean up an object prior to serialization.\n\nReplaces circular references, pretty prints Buffers, and numerous other enhancements. Primarily designed to prepare Errors for serialization to JSON/YAML.\n\nExtracted from [`node-tap`](https://github.com/tapjs/node-tap)\n\n## Install\n\n```\n$ npm install --save clean-yaml-object\n```\n\n\n## Usage\n\n```js\nconst cleanYamlObject = require('clean-yaml-object');\n\ncleanYamlObject(new Error('foo'));\n//=> {name: 'Error', message: 'foo', stack: ...}\n```\n\n\n## API\n\n### cleanYamlObject(input, [filterFn])\n\nReturns a deep copy of `input` that is suitable for serialization. \n\n#### input\n\nType: `*`\n\nAny object.\n\n#### filterFn\n\nType: `callback(propertyName, isRoot, source, target)`\n\nOptional filter callback. Returning `true` will cause the property to be copied. Otherwise it will be skipped\n\n- `propertyName`: The property being copied.\n- `isRoot`: `true` only if `source` is the top level object passed to `copyYamlObject`\n- `source`: The source from which `source[propertyName]` will be copied.\n- `target`: The target object.\n\n## License\n\n\nMIT Â© [Isaac Z. Schlueter](http://github.com/isaacs) [James Talmage](http://github.com/jamestalmage)\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/tapjs/clean-yaml-object.git"
  },
  "scripts": {
    "test": "xo && nyc --cache --reporter=lcov --reporter=text ava"
  },
  "version": "0.1.0"
}
